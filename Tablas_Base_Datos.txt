-- Crear base de datos
CREATE DATABASE Estancia CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE Estancia;

-- Tabla: usuarios (familiares, admins)
CREATE TABLE usuarios (
    nip VARCHAR(10) NOT NULL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(100) NOT NULL UNIQUE,
    telefono VARCHAR(15),
    rol ENUM('familiar', 'admin', 'cuidador', 'medico', 'cocina') NOT NULL DEFAULT 'familiar'
);

CREATE TABLE pacientes (
    id_paciente INT AUTO_INCREMENT PRIMARY KEY,  -- Clave primaria para identificar de manera única a cada paciente
    nip VARCHAR(10) NOT NULL,  -- NIP del familiar
    nombre VARCHAR(100) NOT NULL,  -- Nombre del paciente
    telefono VARCHAR(15) DEFAULT NULL,  -- Teléfono del paciente
    condiciones TEXT DEFAULT NULL,  -- Condiciones médicas del paciente
    foto VARCHAR(255) DEFAULT NULL,  -- URL de la foto del paciente
    FOREIGN KEY (nip) REFERENCES usuarios(nip) ON DELETE CASCADE  -- Relación con la tabla usuarios, por el campo nip
);

CREATE TABLE consumo_comidas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_paciente INT NOT NULL,
    fecha DATE NOT NULL,
    hora TIME NOT NULL,
    tipo_comida ENUM('desayuno', 'comida', 'cena') NOT NULL,
    FOREIGN KEY (id_paciente) REFERENCES pacientes(id_paciente) ON DELETE CASCADE
);


-- Tabla: medicos
CREATE TABLE medicos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nip VARCHAR(20),
    nombre VARCHAR(100),
    correo VARCHAR(100),
    telefono VARCHAR(20),
    especialidad VARCHAR(100) DEFAULT 'General',
    FOREIGN KEY (nip) REFERENCES usuarios(nip) ON DELETE CASCADE
);

-- Tabla de cuidadores con más datos
CREATE TABLE cuidadores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nip VARCHAR(20),
    nombre VARCHAR(100),
    correo VARCHAR(100),
    telefono VARCHAR(20),
    turno VARCHAR(100) DEFAULT 'Diurno',
    FOREIGN KEY (nip) REFERENCES usuarios(nip) ON DELETE CASCADE
);


-- Tabla: expedientes
CREATE TABLE expedientes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_paciente INT NOT NULL,
    fecha_ultima_revision DATE,
    notas TEXT,
    FOREIGN KEY (id_paciente) REFERENCES pacientes(id_paciente) ON DELETE CASCADE
);

DELIMITER //

CREATE TRIGGER trigger_insert_medico
AFTER INSERT ON usuarios
FOR EACH ROW
BEGIN
    IF NEW.rol = 'medico' THEN
        INSERT INTO medicos (nip, nombre, correo, telefono)
        VALUES (NEW.nip, NEW.nombre, NEW.correo, NEW.telefono);
    END IF;
END;
//

DELIMITER ;

DELIMITER //

CREATE TRIGGER trigger_insert_cuidador
AFTER INSERT ON usuarios
FOR EACH ROW
BEGIN
    IF NEW.rol = 'cuidador' THEN
        INSERT INTO cuidadores (nip, nombre, correo, telefono)
        VALUES (NEW.nip, NEW.nombre, NEW.correo, NEW.telefono);
    END IF;
END;
//

DELIMITER ;



-- Tabla: notificaciones médicas
CREATE TABLE notificaciones (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    mensaje TEXT NOT NULL,
    fecha DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Tabla: cocina (menú diario)
CREATE TABLE cocina (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fecha DATE NOT NULL,
    desayuno VARCHAR(255),
    comida VARCHAR(255),
    cena VARCHAR(255)
);

CREATE TABLE reportes_cuidadores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_paciente INT NOT NULL,
    id_cuidador INT NOT NULL,
    fecha DATE NOT NULL,
    observaciones TEXT,
    comio BOOLEAN NOT NULL,
    FOREIGN KEY (id_paciente) REFERENCES pacientes(id_paciente) ON DELETE CASCADE,
    FOREIGN KEY (id_cuidador) REFERENCES cuidadores(id) ON DELETE CASCADE
);

CREATE TABLE reportes_cocina (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fecha DATE NOT NULL,
    ingredientes_utilizados TEXT,
    notas TEXT
);

CREATE TABLE reportes_medicos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_paciente INT NOT NULL,
    id_medico INT NOT NULL,
    fecha DATE NOT NULL,
    sueno TEXT,
    dieta TEXT,
    esfera_emocional TEXT,
    memoria TEXT,
    micciones TEXT,
    evacuaciones TEXT,
    eventualidades TEXT,
    signos_vitales TEXT,
    analisis TEXT,
    plan TEXT,
    FOREIGN KEY (id_paciente) REFERENCES pacientes(id_paciente) ON DELETE CASCADE,
    FOREIGN KEY (id_medico) REFERENCES medicos(id) ON DELETE CASCADE
);

CREATE TABLE cuidadores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    turno ENUM('mañana', 'tarde', 'noche') NOT NULL,
    contacto VARCHAR(100)
);



////
Usuario administrador de ejemplo (opcional)
INSERT INTO usuarios (nombre, correo, nip, rol)
VALUES ('Administrador', 'admin@uta.com', '1234', 'admin');
